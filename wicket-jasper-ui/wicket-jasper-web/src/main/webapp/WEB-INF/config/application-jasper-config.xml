<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!--
		Configurer that replaces ${...} placeholders with values from a
		properties file
	-->
	<!--
		(in this case, JDBC-related settings for the dataSources definitions
		below)
	-->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		id="propertyConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/config/jdbc.properties
				</value>
			</list>
		</property>
	</bean>

	<bean class="org.apache.commons.dbcp.BasicDataSource"
		id="dataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<!--  Session factory bean for Hibernate -->
	<bean
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
		id="sessionFactory">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.cache.provider_class">
					org.hibernate.cache.OSCacheProvider</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.c3p0.acquire_increment">2</prop>
				<prop key="hibernate.c3p0.idle_test_period">300</prop>
				<prop key="hibernate.c3p0.max_size">100</prop>
				<prop key="hibernate.connection.release_mode">
					after_statement</prop>
				<prop key="hibernate.c3p0.min_size">5</prop>
				<prop key="hibernate.c3p0.preferredTestQuery">select
					1</prop>
				<prop key="hibernate.c3p0.testConnectionOnCheckout">
					true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">
					true</prop>
				<prop key="hibernate.format_sql">false</prop>
			</props>
		</property>
		
		<property name="annotatedClasses">
			<list>
				<value>com.ccti.jasper.model.customer.CustomerSales</value>
			</list>
		</property>
		
		<property name="annotatedPackages">
			<list>
				<value>com.ccti.jasper.model</value>
			</list>
		</property>
		
	</bean>
			
	<!--
		Transaction manager for a single Hibernate SessionFactory (alternative
		to JTA)
	-->
	
	<bean class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		id="transactionManager">
		<property name="sessionFactory" ref="sessionFactory">
		</property>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- Read-only commented out to make things easier for end-users -->
			<!-- http://issues.appfuse.org/browse/APF-556 -->
			<!--tx:method name="get*" read-only="true"/-->
			<tx:method name="load*" read-only="true" />
			<tx:method name="count*" read-only="true" />
			
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="sxiServiceMethods"
			expression="execution(* com.ccti.jasper.service..*(..)))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="sxiServiceMethods" />
	</aop:config>
	
	<bean id="customerSalesDao" class="com.ccti.jasper.dao.CustomerSalesDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- bean id="baseService" class="com.ccti.jasper.service.BaseJasperServiceImpl" / -->
	
	<bean id="customerSalesService" class="com.ccti.jasper.service.customer.CustomerSalesServiceImpl">
		<property name="customerSalesDao" ref="customerSalesDao"></property>
	</bean>

</beans>
